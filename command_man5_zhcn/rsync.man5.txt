rsync  version 3.0.6  protocol version 30
Copyright (C) 1996-2009 by Andrew Tridgell, Wayne Davison, and others.
Web site: http://rsync.samba.org/
Capabilities:
    64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,
    socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,
    append, ACLs, xattrs, iconv, symtimes

rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you
are welcome to redistribute it under certain conditions.  See the GNU
General Public Licence for details.

rsync is a file transfer program capable of efficient remote update
via a fast differencing algorithm.

Usage: rsync [OPTION]... SRC [SRC]... DEST
  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST
  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST
  or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST
  or   rsync [OPTION]... [USER@]HOST:SRC [DEST]
  or   rsync [OPTION]... [USER@]HOST::SRC [DEST]
  or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]
The ':' usages connect via remote shell, while '::' & 'rsync://' usages connect
to an rsync daemon, and require SRC or DEST to start with a module name.

Options
 -v, --verbose               increase verbosity
 -q, --quiet                 suppress non-error messages 
                             抑制 non-error 信息
     --no-motd               suppress daemon-mode MOTD (see manpage caveat)
 -c, --checksum              skip based on checksum, not mod-time & size
 -a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)
                             归档模式; 相当于 -rlptgoD (非 -H, -A, -X)
     --no-OPTION             turn off an implied OPTION (e.g. --no-D)
                             关闭隐含选项 
 -r, --recursive             recurse into directories
                             目录递归
 -R, --relative              use relative path names
                             使用相对路径
     --no-implied-dirs       don\'t send implied dirs with --relative
                             不发送隐藏目录, 与 --relative 一起使用
 -b, --backup                make backups (see --suffix & --backup-dir)
                             备份目标目录同名文件(参考 --suffix & --backup-dir)
     --backup-dir=DIR        make backups into hierarchy based in DIR
                             指定同名文件的备份路径。默认为DEST目录。可使用绝对路径。
     --suffix=SUFFIX         set backup suffix (default ~ w/o --backup-dir)
                             指定桐木文件的备份后缀。默认为~。可使用变量
{
  $ rsync --progress -a -b --backup 1/ 2/                             # 2/index.html~
  $ rsync --progress -a -b --backup-dir=bak --suffix=ori 1/ 2/        # 2/bak/indexori
  $ rsync --progress -a -b --backup-dir=bak --suffix=.ori_$(date +%F) 1/ 2/           # 2/bak/index.html.ori_2015-09-06
  $ rsync --progress -a -b --backup-dir=/tmp/2bak --suffix=.ori_$(date +%F) 1/ 2/     # /tmp/2bak/index.html.ori_2015-09-06
  $ rsync --progress -a -b --backup-dir=/tmp/2bak --suffix=".ori_$(date +%F)" 1/ 2/   # /tmp/2bak/index.html.ori_2015-09-06
  
  # tree 2/
  2/
  ├── bak
  │   ├── index.htmlori
  │   └── index.html.ori_2015-09-06
  ├── index.html
  └── index.html~
} 
       
 -u, --update                skip files that are newer on the receiver
                             DEST中的文件较新则跳过
     --inplace               update destination files in-place (SEE MAN PAGE)
                             原地更新目标文件
     --append                append data onto shorter files
                             将源文件多出的行数添加到目标文件中。之前的忽略。同步后，文件可能不一致
     --append-verify         like --append, but with old data in file checksum
                             与 --append 类似。但是会对目标文件进行校验。同步后，文件一直
{
  # 校验失败
  $ rsync -a --progress --append-verify 1/ 2/
  sending incremental file list
  ./
  index.html
           812 100%  792.97kB/s    0:00:00 (xfer#1, to-check=0/2)
  WARNING: index.html failed verification -- update retained (will try again).
  index.html
           812 100%  792.97kB/s    0:00:00 (xfer#2, to-check=0/2)

  sent 1041 bytes  received 95 bytes  2272.00 bytes/sec
  total size is 812  speedup is 0.71
  $ diff 1/index.html 2/index.html 


  $ date >> 1/index.html 

  # 校验成功
  $ rsync -a --progress --append-verify 1/ 2/
  sending incremental file list
  index.html
           899 100%  877.93kB/s    0:00:00 (xfer#1, to-check=0/2)

  sent 179 bytes  received 31 bytes  420.00 bytes/sec
  total size is 899  speedup is 4.28

}

 -d, --dirs                  transfer directories without recursing
                             非递归同步目录
 -l, --links                 copy symlinks as symlinks
                             保持软连接文件属性
 -L, --copy-links            transform symlink into referent file/dir
                             将软连接转换为关联的文件或目录后进行传输
     --copy-unsafe-links     only "unsafe" symlinks are transformed
                             仅"unsafe"软连接将被转换
     --safe-links            ignore symlinks that point outside the source tree
                             忽略指向源目录树外的软连接
 -k, --copy-dirlinks         transform symlink to a dir into referent dir
 -K, --keep-dirlinks         treat symlinked dir on receiver as dir
 -H, --hard-links            preserve hard links
 -p, --perms                 preserve permissions
 -E, --executability         preserve the file's executability
     --chmod=CHMOD           affect file and/or directory permissions
 -A, --acls                  preserve ACLs (implies --perms)
 -X, --xattrs                preserve extended attributes
 -o, --owner                 preserve owner (super-user only)
 -g, --group                 preserve group
     --devices               preserve device files (super-user only)
     --copy-devices          copy device contents as regular file
     --specials              preserve special files
 -D                          same as --devices --specials
 -t, --times                 preserve modification times
 -O, --omit-dir-times        omit directories from --times
     --super                 receiver attempts super-user activities
     --fake-super            store/recover privileged attrs using xattrs
 -S, --sparse                handle sparse files efficiently
 -n, --dry-run               perform a trial run with no changes made
 -W, --whole-file            copy files whole (without delta-xfer algorithm)
 -x, --one-file-system       don't cross filesystem boundaries
 -B, --block-size=SIZE       force a fixed checksum block-size
 -e, --rsh=COMMAND           specify the remote shell to use
     --rsync-path=PROGRAM    specify the rsync to run on the remote machine
     --existing              skip creating new files on receiver
     --ignore-existing       skip updating files that already exist on receiver
     --remove-source-files   sender removes synchronized files (non-dirs)
     --del                   an alias for --delete-during
     --delete                delete extraneous files from destination dirs
                             从远端目录中删除文件
     --delete-before         receiver deletes before transfer, not during
                             接收端(DEST)在传输前删除发送端(SRC)不存在的文件
     --delete-during         receiver deletes during transfer (default)
                             接收端(DEST)在传输过程中删除不存在的文件
     --delete-delay          find deletions during, delete after
                             先传输数据，并在过程中找到需要删除的文件。传输完成后删除。
     --delete-after          receiver deletes after transfer, not during
                             接收端先删除文件，再进行传输
     --delete-excluded       also delete excluded files from destination dirs
                             从远端目录中删除文件，包括exclude指定的。
     --ignore-errors         delete even if there are I/O errors
     --force                 force deletion of directories even if not empty
     --max-delete=NUM        don't delete more than NUM files
     --max-size=SIZE         don't transfer any file larger than SIZE
     --min-size=SIZE         don't transfer any file smaller than SIZE
     --partial               keep partially transferred files
     --partial-dir=DIR       put a partially transferred file into DIR
     --delay-updates         put all updated files into place at transfer's end
 -m, --prune-empty-dirs      prune empty directory chains from the file-list
     --numeric-ids           don't map uid/gid values by user/group name
     --timeout=SECONDS       set I/O timeout in seconds
     --contimeout=SECONDS    set daemon connection timeout in seconds
 -I, --ignore-times          don't skip files that match in size and mod-time
     --size-only             skip files that match in size
     --modify-window=NUM     compare mod-times with reduced accuracy
 -T, --temp-dir=DIR          create temporary files in directory DIR
 -y, --fuzzy                 find similar file for basis if no dest file
     --compare-dest=DIR      also compare destination files relative to DIR
     --copy-dest=DIR         ... and include copies of unchanged files
     --link-dest=DIR         hardlink to files in DIR when unchanged
 -z, --compress              compress file data during the transfer
     --compress-level=NUM    explicitly set compression level
     --skip-compress=LIST    skip compressing files with a suffix in LIST
 -C, --cvs-exclude           auto-ignore files the same way CVS does
 -f, --filter=RULE           add a file-filtering RULE
 -F                          same as --filter='dir-merge /.rsync-filter'
                             repeated: --filter='- .rsync-filter'
     --exclude=PATTERN       exclude files matching PATTERN
     --exclude-from=FILE     read exclude patterns from FILE
     --include=PATTERN       don't exclude files matching PATTERN
     --include-from=FILE     read include patterns from FILE
     --files-from=FILE       read list of source-file names from FILE
 -0, --from0                 all *-from/filter files are delimited by 0s
 -s, --protect-args          no space-splitting; only wildcard special-chars
     --address=ADDRESS       bind address for outgoing socket to daemon
     --port=PORT             specify double-colon alternate port number
     --sockopts=OPTIONS      specify custom TCP options
     --blocking-io           use blocking I/O for the remote shell
     --stats                 give some file-transfer stats
 -8, --8-bit-output          leave high-bit chars unescaped in output
 -h, --human-readable        output numbers in a human-readable format
     --progress              show progress during transfer
 -P                          same as --partial --progress
 -i, --itemize-changes       output a change-summary for all updates
     --out-format=FORMAT     output updates using the specified FORMAT
     --log-file=FILE         log what we're doing to the specified FILE
     --log-file-format=FMT   log updates using the specified FMT
     --password-file=FILE    read daemon-access password from FILE
     --list-only             list the files instead of copying them
     --bwlimit=KBPS          limit I/O bandwidth; KBytes per second
     --write-batch=FILE      write a batched update to FILE
     --only-write-batch=FILE like --write-batch but w/o updating destination
     --read-batch=FILE       read a batched update from FILE
     --protocol=NUM          force an older protocol version to be used
     --iconv=CONVERT_SPEC    request charset conversion of filenames
 -4, --ipv4                  prefer IPv4
 -6, --ipv6                  prefer IPv6
     --version               print version number
(-h) --help                  show this help (-h works with no other options)

Use "rsync --daemon --help" to see the daemon-mode command-line options.
Please see the rsync(1) and rsyncd.conf(5) man pages for full documentation.
See http://rsync.samba.org/ for updates, bug reports, and answers
